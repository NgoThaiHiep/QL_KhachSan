/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import DAO.DichVu_DAO;
import DAO.HoaDon_DAO;
import DAO.Phong_DAO;
import Entity.DichVu;
import Entity.HoaDon;
import Entity.Phong;
import connectDB.ConnectDB;


public class hoadonform extends JFrame implements ActionListener,MouseListener{

	// Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnclear4;
    private JLabel lblTieuDe;
    private  JLabel lblMaHoaDon;
  
    private  JLabel lblMaPhong;
    private  JLabel lblNgay;
    private  JLabel lblGiaHD;
    private  JPanel jPanel20;
    private  JPanel pnNorth;
    private  JPanel jPanel22;
    private  JPanel pnHoaDon;
    private  JScrollPane jScrollPane5;
    private  JTable TableHoaDon;
    private  JTextField txtGiaHD;
    private  JTextField txtMaHD;
    
    private  JComboBox<String> cboMaPhongHD;
    private  JTextField txtNgay;
    private  JButton btnSua;
    private  JButton btnThem;
    private  JButton btnLoc;
    private  JButton btnxoa;
    // End of variables declaration//GEN-END:variables
    private HoaDon_DAO hoadon_dao;
	private Phong_DAO phong_dao;
	private DichVu_DAO dichvu_dao;
	private JButton btnThoat;
	/**
     * Creates new form hoadonform
     */
    public hoadonform() {
        initComponents();
        hienThiDanhSachHoaDon();
        setLocationRelativeTo(null);
    }
    
  

     public void hienThiDanhSachHoaDon()  {
        String colTieuDe1[] = new String[]{"Mã Hóa Đơn", "Mã Phòng", "Ngày Ở", "Giá Hóa Đơn"};
        ArrayList<HoaDon> dshd = hoadon_dao.getAlltbHoaDon();

        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);
        Object[] row;

        for (int i = 0; i < dshd.size(); i++) {

            row = new Object[4];

            // GÁN GIÁ TRỊ
            row[0] = dshd.get(i).getMaHoaDon();
            row[1] = dshd.get(i).getMaPhong().getMaPhong();
            row[2] = dshd.get(i).getSoNgayO();
            row[3] = dshd.get(i).getGIAHD();
           

            model.addRow(row);
        }
        
        //    }catch(ArrayIndexOutOfBoundsException ex){

        TableHoaDon.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
    	try {
			ConnectDB.getInstance().connect();
		}catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
    	
    	hoadon_dao = new HoaDon_DAO();
    	phong_dao  = new Phong_DAO();
    	dichvu_dao = new DichVu_DAO();
    	
    	
        pnHoaDon = new  JPanel();
        jPanel20 = new  JPanel();
        lblTieuDe = new  JLabel();
        pnNorth = new  JPanel();
        lblMaHoaDon = new  JLabel();
        lblMaPhong = new  JLabel();
        lblNgay = new  JLabel();
        lblGiaHD = new  JLabel();
        txtMaHD = new  JTextField();
        cboMaPhongHD = new  JComboBox<String>();
        txtNgay = new  JTextField();
        txtGiaHD = new  JTextField();
        btnThem = new  JButton();
        btnSua = new  JButton();
        btnxoa = new  JButton();
        btnLoc = new  JButton();
        btnThoat = new JButton();
        btnclear4 = new  JButton();
        jPanel22 = new  JPanel();
        jScrollPane5 = new  JScrollPane();
        TableHoaDon = new  JTable();

        
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 255));

        pnHoaDon.setBackground(new java.awt.Color(0, 204, 255));

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblTieuDe.setText("HÓA ĐƠN");

        GroupLayout jPanel20Layout = new GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTieuDe, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTieuDe))
        );

        pnNorth.setBorder(BorderFactory.createTitledBorder("Thông Tn Hóa Đơn"));

        lblMaHoaDon.setText("Mã Hóa Đơn");
       
        ArrayList<Phong> dsp = phong_dao.getAlltbPhong();
	   	 for (Phong p : dsp) {
		    		
	         	if(p.getTinhTrang().equals("Đã được đặt"))
	 			cboMaPhongHD.addItem(p.getMaPhong());
	 		}
	   	lblMaPhong.setText("Mã Phòng");
        lblNgay.setText("Ngày");

        lblGiaHD.setText("Giá Hóa Đơn");

       
        btnThem.setIcon(new ImageIcon(getClass().getResource("/qlksk17/THEM.png"))); // NOI18N
        btnThem.setText("Thêm");
       

        btnSua.setIcon(new ImageIcon(getClass().getResource("/qlksk17/SUA.png"))); // NOI18N
        btnSua.setText("Sửa");
      
           

        btnxoa.setIcon(new ImageIcon(getClass().getResource("/qlksk17/XOA.png"))); // NOI18N
        btnxoa.setText("Xóa");
       
            
        btnclear4.setIcon(new ImageIcon(getClass().getResource("/qlksk17/CLEAR.png"))); // NOI18N
        btnclear4.setText("Clear");

     
        btnLoc.setIcon(new ImageIcon(getClass().getResource("/qlksk17/LOC.png"))); // NOI18N
        btnLoc.setText("Lọc");
        
        btnThoat.setIcon(new ImageIcon(getClass().getResource("/qlksk17/THOAT.png"))); // NOI18N
        btnThoat.setText("Thoát");
        

       GroupLayout pnNorthLayout = new GroupLayout(pnNorth);
        pnNorth.setLayout(pnNorthLayout);
        pnNorthLayout.setHorizontalGroup(
            pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnNorthLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaHoaDon)                  
                    .addComponent(lblMaPhong)
                    .addComponent(lblNgay)
                    .addComponent(lblGiaHD)
                    .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnxoa, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThem, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnNorthLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnSua) 
                        .addGap(18, 18, 18)
                        .addComponent(btnclear4)
                       
                        )

                    .addGroup(pnNorthLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtGiaHD, GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(txtNgay)
                            .addComponent(cboMaPhongHD)
                            .addComponent(txtMaHD)))
                    .addGroup(pnNorthLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnLoc)
                        .addGap(18, 18, 18)
                        .addComponent(btnThoat)
                        ))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnNorthLayout.setVerticalGroup(
            pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnNorthLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaHoaDon)
                    .addComponent(txtMaHD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                		
                )
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaPhong)
                    .addComponent(cboMaPhongHD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblNgay)
                    .addComponent(txtNgay, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblGiaHD)
                    .addComponent(txtGiaHD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnclear4))
                .addGap(26, 26, 26)
                .addGroup(pnNorthLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnxoa)
                    .addComponent(btnLoc)
                    .addComponent(btnThoat)
                    )
                	
                .addContainerGap(32, Short.MAX_VALUE))
        );

        TableHoaDon.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
       
        jScrollPane5.setViewportView(TableHoaDon);

        GroupLayout jPanel22Layout = new GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, GroupLayout.PREFERRED_SIZE, 402, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        GroupLayout jPanel6Layout = new GroupLayout(pnHoaDon);
        pnHoaDon.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnNorth, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jPanel22, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(jPanel20, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel20, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnNorth, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel22, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(pnHoaDon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnHoaDon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        
        //lắng nghe sự kiện
      
        txtNgay.addActionListener(this); 
        btnThem.addActionListener(this);
        btnxoa.addActionListener(this);
        btnclear4.addActionListener(this);
        btnSua.addActionListener(this);
        btnLoc.addActionListener(this);
        btnThoat.addActionListener(this);
        TableHoaDon.addMouseListener(this);
        cboMaPhongHD.addActionListener(this);
        pack();
       
    }// </editor-fold>//GEN-END:initComponents



	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		Object obj = e.getSource();
		
		if(obj.equals(txtNgay)) {
			
		}
		
		if(obj.equals(cboMaPhongHD)) {
			
			cboMaHoaDon() ;
		}
		
		if(obj.equals(btnclear4)) {
			txtMaHD.setText("");
	        txtNgay.setText("");
	        txtGiaHD.setText("");
	        txtMaHD.requestFocus();
		}if(obj.equals(btnThem)) {
			them();
		}
		if(obj.equals(btnxoa)) {
			xoa() ;
		}
		
		if(obj.equals(btnSua)) {
			sua();
		}if(obj.equals(btnLoc)) {
			loc();
		}
		if(obj.equals(btnThoat)) {
			 btnThoat.setToolTipText("Click để thoát chương trình ");
			    int selected = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát chương"
			  + " trình không", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
			   if (selected == JOptionPane.YES_NO_OPTION) {
			    this.dispose(); }
		}
		
	}

	private void them() {
    	HoaDon hd =  createform();
    	hoadon_dao.addClient(hd);
    	phong_dao.updateTinhTrang("Phòng trống", cboMaPhongHD.getSelectedItem()+"");
    	hienThiDanhSachHoaDon();
	}
	private void xoa() {
    	String ma = txtMaHD.getText();
        hoadon_dao.DeleteNV(ma);
        hienThiDanhSachHoaDon();
    }
	 private void sua() {
		 HoaDon hd =  createform();
		 hoadon_dao.update(hd);
		 hienThiDanhSachHoaDon();
	 }
        
	 private HoaDon  createform() {
	    	String maHD = txtMaHD.getText();
	    	String maPhong = cboMaPhongHD.getSelectedItem()+"";
	    	Phong p = new Phong(maPhong);
	    	int soNgay = Integer.parseInt( txtNgay.getText());
	    	float tien = Float.parseFloat(txtGiaHD.getText());
	    	return new HoaDon(maHD, p, soNgay, tien);
	    	
	 }
	private void cboMaHoaDon() {
				hienThiDanhSachHoaDon();
				ArrayList<Phong> dsp = phong_dao.getAlltbPhong();
				String maPhong = cboMaPhongHD.getSelectedItem()+"";
				ArrayList<DichVu> dsdv = dichvu_dao.getAlltbDichVu();
				float giaHD =0;
				for (Phong p : dsp) {
					if(p.getMaPhong().equals(maPhong)) {
						Float tien = p.getGiaPhong();
						giaHD  = tien * Integer.parseInt(txtNgay.getText());	
						
					}
					for (DichVu dv : dsdv) {
						if(dv.getMaDichVu()==p.getMaDichVu().getMaDichVu()) {
							giaHD += dv.getDonGia();
						}
					}
				}
				txtGiaHD.setText(giaHD+"");
	}
	private void loc() {
		String maPhong = cboMaPhongHD.getSelectedItem()+"";
		
		String colTieuDe1[] = new String[]{"Mã Hóa Đơn", "Mã Phòng", "Ngày Ở", "Giá Hóa Đơn"};
		ArrayList<HoaDon> dsp = hoadon_dao.getAlltbHoaDon();
		DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);
		 Object[] row;

		 for (int j = 0; j <dsp.size(); j++) {
		        	if(dsp.get(j).getMaPhong().getMaPhong().equals(maPhong)) {
		        		row = new Object[4];

			            // GÁN GIÁ TRỊ
			            row[0] = dsp.get(j).getMaHoaDon();
			            row[1] = dsp.get(j).getMaPhong().getMaPhong();
			            row[2] = dsp.get(j).getSoNgayO();
			            row[3] = dsp.get(j).getGIAHD();
			           

			            model.addRow(row);
		        	}
		            
		        }	   
		        TableHoaDon.setModel(model);
	}
		
	

	
    public static void main(String args[]) {
      
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hoadonform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hoadonform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hoadonform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hoadonform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hoadonform().setVisible(true);
            }
        });
    }



	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
	     int row = TableHoaDon.getSelectedRow();
	        TableModel model = TableHoaDon.getModel();
	        txtMaHD.setText(model.getValueAt(row, 0).toString());
	       
	        cboMaPhongHD.removeAllItems();
	        txtNgay.setText(model.getValueAt(row, 2).toString());
	        
	        cboMaPhongHD.removeAllItems();
	        cboMaPhongHD.addItem(model.getValueAt(row, 1).toString());
	        cboMaPhongHD.setSelectedItem(model.getValueAt(row, 1).toString());
	       
	        txtGiaHD.setText(model.getValueAt(row, 3).toString());
			
			ArrayList<Phong> dsp = phong_dao.getAlltbPhong();
			
			for (Phong p : dsp) {
				 if(p.getTinhTrang().equals("Đã được đặt")  ) {
						
					cboMaPhongHD.addItem(p.getMaPhong());
				 }
			 }
		
		
	}



	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}



	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}



	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}



	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}








}
